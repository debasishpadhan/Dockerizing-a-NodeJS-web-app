pipeline {
    agent { node { label 'agent2' } }
    environment {
        AWS_ACCOUNT_ID="787020721737"
        AWS_DEFAULT_REGION="ap-south-1" 
        IMAGE_REPO_NAME="nodejsapp"
        IMAGE_TAG="latest"
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
    }
   
    stages {
        stage('Logging into AWS ECR') {
            steps {
                script {
                    sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
                }
            }
        }
        
        stage('Cloning Git') {
            steps {
                checkout scm     
            }
        }

        stage('Building image') {
            steps{
                script {
                    dockerImage = docker.build "${IMAGE_REPO_NAME}:${IMAGE_TAG}"
                }
            }
        }

        stage('Built confirmation notification') {
            steps{
                script {
                    def userAborted = false
                    notifyEvents message: "Please go to console output of ${BUILD_URL}input to approve or Reject.", token: '9kwgMyapizr8whRRqJPYS87AOZ7U5EUk'
      
                    echo "Building1"
                    try { 
                        userInput = input submitter: 'vagrant', message: 'Do you approve?'
                    }

                    catch (org.jenkinsci.plugins.workflow.steps.FlowInterruptedException e) {
                        cause = e.causes.get(0)
                        echo "Aborted by " + cause.getUser().toString()
                        userAborted = true
                        echo "SYSTEM aborted, but looks like timeout period didn't complete. Aborting."
                    }

                    if (userAborted) {
                        currentBuild.result = 'ABORTED'
                    }

                    else {
                        echo "Building2"
                    }
                }
            }
        }

        stage('Pushing to ECR') {
            steps{  
                script {
                    sh "docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}:version${env.BUILD_NUMBER}"
                    sh "docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:version${env.BUILD_NUMBER}"
                }
            }
        }

        stage('Skype Notification') {
            steps{
                script {
                    notifyEvents message: 'ECR pipeline | <b>$BUILD_ID</b> - Built successfully', token: '9kwgMyapizr8whRRqJPYS87AOZ7U5EUk'
                }
            }
        }
    }
}
